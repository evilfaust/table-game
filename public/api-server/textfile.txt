api 
?api_key=id5kogyfYPWDBPoabxjhwR83sXTwjOFNc0sSRcfM
id турнира: 14185026
api ключ: id5kogyfYPWDBPoabxjhwR83sXTwjOFNc0sSRcfM

https://api.challonge.com/v1/tournaments.json?api_key=id5kogyfYPWDBPoabxjhwR83sXTwjOFNc0sSRcfM


https://api.challonge.com/v1/tournaments/tournament.json?api_key=id5kogyfYPWDBPoabxjhwR83sXTwjOFNc0sSRcfM
https://api.challonge.com/v1/tournaments/14185026/participants/27656710.json?api_key=id5kogyfYPWDBPoabxjhwR83sXTwjOFNc0sSRcfM

359611289
https://api.challonge.com/v1/tournaments/14185026/matches/359611289.json?api_key=id5kogyfYPWDBPoabxjhwR83sXTwjOFNc0sSRcfM


https://api.challonge.com/v1/tournaments/14185026/participants.json?api_key=id5kogyfYPWDBPoabxjhwR83sXTwjOFNc0sSRcfM

https://api.challonge.com/v1/tournaments/14185026/matches/359611289/mark_as_underway.json?api_key=id5kogyfYPWDBPoabxjhwR83sXTwjOFNc0sSRcfM

https://api.challonge.com/v2/tournaments.json?api_key=b70cbf62014c0d1c28b2beccd5e102ae23b16b93d50557ce1403dae88e96676c











Нужно написать реакт копонент на сайт киберспортивной лиги, который будет рисовать таблицу турнира. Используем api challonge.
в реакт приложении используется atnd 
id турнира: 14185026
api ключ: id5kogyfYPWDBPoabxjhwR83sXTwjOFNc0sSRcfM

https://api.challonge.com/v1/tournaments/14185026/matches.json имеет вот такую структуру данных:

[
    {
        "match": {
            "id": 359611289,
            "tournament_id": 14185026,
            "state": "complete",
            "player1_id": 27656707,
            "player2_id": 27656708,
            "player1_prereq_match_id": null,
            "player2_prereq_match_id": null,
            "player1_is_prereq_match_loser": false,
            "player2_is_prereq_match_loser": false,
            "winner_id": 27656708,
            "loser_id": 27656707,
            "started_at": "2024-03-23T21:08:08.211-04:00",
            "created_at": "2024-03-23T21:08:07.858-04:00",
            "updated_at": "2024-03-25T05:42:48.182-04:00",
            "identifier": "A",
            "has_attachment": false,
            "round": 1,
            "player1_votes": null,
            "player2_votes": null,
            "group_id": 5166677,
            "attachment_count": null,
            "scheduled_time": null,
            "location": null,
            "underway_at": null,
            "optional": null,
            "completed_at": "2024-03-25T05:42:48.187-04:00",
            "suggested_play_order": 1,
            "forfeited": null,
            "open_graph_image_file_name": null,
            "open_graph_image_content_type": null,
            "open_graph_image_file_size": null,
            "prerequisite_match_ids_csv": "",
            "scores_csv": "0-1"
        }
    },

    {
        "match": {
            "id": 360743153,
            "tournament_id": 14185026,
            "state": "complete",
            "player1_id": 226279391,
            "player2_id": 226279388,
            "player1_prereq_match_id": 360743138,
            "player2_prereq_match_id": 360743152,
            "player1_is_prereq_match_loser": false,
            "player2_is_prereq_match_loser": false,
            "winner_id": 226279391,
            "loser_id": 226279388,
            "started_at": "2024-04-14T03:21:41.843-04:00",
            "created_at": "2024-04-01T21:31:45.280-04:00",
            "updated_at": "2024-04-14T05:40:53.489-04:00",
            "identifier": "P",
            "has_attachment": false,
            "round": 5,
            "player1_votes": null,
            "player2_votes": null,
            "group_id": null,
            "attachment_count": null,
            "scheduled_time": null,
            "location": null,
            "underway_at": null,
            "optional": false,
            "completed_at": "2024-04-14T05:40:53.510-04:00",
            "suggested_play_order": 30,
            "forfeited": null,
            "open_graph_image_file_name": null,
            "open_graph_image_content_type": null,
            "open_graph_image_file_size": null,
            "prerequisite_match_ids_csv": "360743138,360743152",
            "scores_csv": "13-1,13-8,0-0"
        }
    }
]





https://api.challonge.com/v1/tournaments/14185026/participants.json имеет вот такую структуру данных:
[
    
    {
        "participant": {
            "id": 226279388,
            "tournament_id": 14185026,
            "name": "21INT",
            "seed": 1,
            "active": true,
            "created_at": "2024-03-17T21:38:26.531+11:00",
            "updated_at": "2024-04-01T21:27:15.120+11:00",
            "invite_email": null,
            "final_rank": 2,
            "misc": null,
            "icon": null,
            "on_waiting_list": false,
            "invitation_id": null,
            "group_id": null,
            "checked_in_at": null,
            "ranked_member_id": null,
            "custom_field_response": null,
            "clinch": null,
            "integration_uids": null,
            "challonge_username": null,
            "challonge_user_id": null,
            "challonge_email_address_verified": null,
            "removable": false,
            "participatable_or_invitation_attached": false,
            "confirm_remove": true,
            "invitation_pending": false,
            "display_name_with_invitation_email_address": "21INT",
            "email_hash": null,
            "username": null,
            "display_name": "21INT",
            "attached_participatable_portrait_url": null,
            "can_check_in": false,
            "checked_in": false,
            "reactivatable": false,
            "check_in_open": false,
            "group_player_ids": [
                27656716
            ],
            "has_irrelevant_seed": false,
            "ordinal_seed": "1st",
            "roster_complete": null,
            "roster_size": null
        }
    },
    {
        "participant": {
            "id": 226837595,
            "tournament_id": 14185026,
            "name": "DESOLATORS",
            "seed": 32,
            "active": false,
            "created_at": "2024-03-23T20:43:21.451+11:00",
            "updated_at": "2024-03-23T21:36:33.242+11:00",
            "invite_email": null,
            "final_rank": null,
            "misc": null,
            "icon": null,
            "on_waiting_list": false,
            "invitation_id": null,
            "group_id": null,
            "checked_in_at": null,
            "ranked_member_id": null,
            "custom_field_response": null,
            "clinch": null,
            "integration_uids": null,
            "challonge_username": null,
            "challonge_user_id": null,
            "challonge_email_address_verified": null,
            "removable": false,
            "participatable_or_invitation_attached": false,
            "confirm_remove": true,
            "invitation_pending": false,
            "display_name_with_invitation_email_address": "DESOLATORS",
            "email_hash": null,
            "username": null,
            "display_name": "DESOLATORS",
            "attached_participatable_portrait_url": null,
            "can_check_in": false,
            "checked_in": false,
            "reactivatable": false,
            "check_in_open": false,
            "group_player_ids": [
                27656737
            ],
            "has_irrelevant_seed": false,
            "ordinal_seed": "32nd",
            "roster_complete": null,
            "roster_size": null
        }
    }
]

Используется вот такой прокси
import express from 'express';
import axios from 'axios';
import cors from 'cors'; // Import the cors middleware
const app = express();

const API_KEY = 'id5kogyfYPWDBPoabxjhwR83sXTwjOFNc0sSRcfM';
const TOURNAMENT_ID = '14185026';
// Enable CORS for all routes
app.use(cors());
app.get('/api/matches', async (req, res) => {
  try {
    const response = await axios.get(
      `https://api.challonge.com/v1/tournaments/${TOURNAMENT_ID}/matches.json?api_key=${API_KEY}`
    );
    res.json(response.data);
  } catch (error) {
    res.status(500).json({ error: 'Failed to fetch matches' });
  }
});

app.get('/api/participants', async (req, res) => {
  try {
    const response = await axios.get(
      `https://api.challonge.com/v1/tournaments/${TOURNAMENT_ID}/participants.json?api_key=${API_KEY}`
    );
    res.json(response.data);
  } catch (error) {
    res.status(500).json({ error: 'Failed to fetch participants' });
  }
});

app.listen(5000, () => {
  console.log('Proxy server running on port 5000');
});